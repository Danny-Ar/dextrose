var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var fs=require("fs");var Jimp=require("jimp");var imageDiff=require("./differ");var imageLoader=require("./loader");var Snapper=require("./snapper");var mkdir=function mkdir(path){if(!fs.existsSync(path)){fs.mkdirSync(path);}};module.exports=function(){function AppSnapper(platform,snapsPath){_classCallCheck(this,AppSnapper);this.platform=platform;this.snapper=new Snapper(platform);this.snapPath=snapsPath+"/"+platform+"/tmp";}_createClass(AppSnapper,[{key:"snap",value:function snap(testname){var _this=this;var image;return regeneratorRuntime.async(function snap$(_context){while(1){switch(_context.prev=_context.next){case 0:mkdir(this.snapPath);this.snapper.snap(this.snapPath+"/"+testname+".png");_context.next=4;return regeneratorRuntime.awrap(Jimp.read(this.snapPath+"/"+testname+".png"));case 4:image=_context.sent;return _context.abrupt("return",new Promise(function(resolve){image.scale(0.37,function(err,_image){_image.write(_this.snapPath+"/"+testname+".png",resolve);});}));case 6:case"end":return _context.stop();}}},null,this);}},{key:"diff",value:function diff(testname){var tempShot,approvedShot,_imageDiff,diffCount;return regeneratorRuntime.async(function diff$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return regeneratorRuntime.awrap(imageLoader(this.snapPath+"/"+testname+".png"));case 2:tempShot=_context2.sent;_context2.next=5;return regeneratorRuntime.awrap(imageLoader(this.approvedSnaps+"/"+testname+".png"));case 5:approvedShot=_context2.sent;_imageDiff=imageDiff(approvedShot,tempShot),diffCount=_imageDiff.diffCount;return _context2.abrupt("return",diffCount);case 8:case"end":return _context2.stop();}}},null,this);}},{key:"exists",value:function exists(testname){var exists=fs.existsSync(this.approvedSnaps+"/"+testname+".png");return exists;}}]);return AppSnapper;}();
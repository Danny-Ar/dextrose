var _this=this;var _path=require("path");var _path2=_interopRequireDefault(_path);var _snapper=require("./snapper");var _snapper2=_interopRequireDefault(_snapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}jest.mock("child_process");describe("snapper",function(){it("sets a platform to snap",function(){var platform="ios";var snapper=new _snapper2.default(platform);expect(snapper.platform).toBe("ios");});it("throws if an unknown platform is set",function(){var platform="rubbish";expect(function(){return new _snapper2.default(platform);}).toThrow();});it("calls snap",function _callee(){var _require,spawnSync,platform,snapper,outputFile;return regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_require=require("child_process"),spawnSync=_require.spawnSync;platform="ios";snapper=new _snapper2.default(platform);outputFile=_path2.default.join(__dirname,".png");_context.next=6;return regeneratorRuntime.awrap(snapper.snap(outputFile));case 6:expect(spawnSync.mock.calls[0]).toEqual(["npx",["osnap","ios","-f",_path2.default.join(__dirname,".png")]]);case 7:case"end":return _context.stop();}}},null,_this);});it("throws if output path is not a string",function _callee2(){var platform,snapper;return regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:platform="ios";snapper=new _snapper2.default(platform);expect(function(){return snapper.snap({});}).toThrow();case 3:case"end":return _context2.stop();}}},null,_this);});});